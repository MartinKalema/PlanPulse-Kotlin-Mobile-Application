// Generated by view binder compiler. Do not edit!
package com.example.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout belowAccounts;

  @NonNull
  public final LinearLayout belowAppPermissions;

  @NonNull
  public final LinearLayout belowClients;

  @NonNull
  public final LinearLayout belowFirstTextview;

  @NonNull
  public final LinearLayout belowHomeSettings;

  @NonNull
  public final LinearLayout belowVoice;

  @NonNull
  public final View divider8;

  @NonNull
  public final View divider9;

  @NonNull
  public final LinearLayout emailAndNameContainer;

  @NonNull
  public final TextView homeSettingsTextview;

  @NonNull
  public final TextView permissionsTextview;

  @NonNull
  public final Toolbar settingsToolbar;

  @NonNull
  public final TextView userSettingsTextview;

  @NonNull
  public final TextView voiceTextview;

  private FragmentSettBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout belowAccounts, @NonNull LinearLayout belowAppPermissions,
      @NonNull LinearLayout belowClients, @NonNull LinearLayout belowFirstTextview,
      @NonNull LinearLayout belowHomeSettings, @NonNull LinearLayout belowVoice,
      @NonNull View divider8, @NonNull View divider9, @NonNull LinearLayout emailAndNameContainer,
      @NonNull TextView homeSettingsTextview, @NonNull TextView permissionsTextview,
      @NonNull Toolbar settingsToolbar, @NonNull TextView userSettingsTextview,
      @NonNull TextView voiceTextview) {
    this.rootView = rootView;
    this.belowAccounts = belowAccounts;
    this.belowAppPermissions = belowAppPermissions;
    this.belowClients = belowClients;
    this.belowFirstTextview = belowFirstTextview;
    this.belowHomeSettings = belowHomeSettings;
    this.belowVoice = belowVoice;
    this.divider8 = divider8;
    this.divider9 = divider9;
    this.emailAndNameContainer = emailAndNameContainer;
    this.homeSettingsTextview = homeSettingsTextview;
    this.permissionsTextview = permissionsTextview;
    this.settingsToolbar = settingsToolbar;
    this.userSettingsTextview = userSettingsTextview;
    this.voiceTextview = voiceTextview;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sett, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.below_accounts;
      LinearLayout belowAccounts = ViewBindings.findChildViewById(rootView, id);
      if (belowAccounts == null) {
        break missingId;
      }

      id = R.id.below_app_permissions;
      LinearLayout belowAppPermissions = ViewBindings.findChildViewById(rootView, id);
      if (belowAppPermissions == null) {
        break missingId;
      }

      id = R.id.below_clients;
      LinearLayout belowClients = ViewBindings.findChildViewById(rootView, id);
      if (belowClients == null) {
        break missingId;
      }

      id = R.id.below_first_textview;
      LinearLayout belowFirstTextview = ViewBindings.findChildViewById(rootView, id);
      if (belowFirstTextview == null) {
        break missingId;
      }

      id = R.id.below_home_settings;
      LinearLayout belowHomeSettings = ViewBindings.findChildViewById(rootView, id);
      if (belowHomeSettings == null) {
        break missingId;
      }

      id = R.id.below_voice;
      LinearLayout belowVoice = ViewBindings.findChildViewById(rootView, id);
      if (belowVoice == null) {
        break missingId;
      }

      id = R.id.divider8;
      View divider8 = ViewBindings.findChildViewById(rootView, id);
      if (divider8 == null) {
        break missingId;
      }

      id = R.id.divider9;
      View divider9 = ViewBindings.findChildViewById(rootView, id);
      if (divider9 == null) {
        break missingId;
      }

      id = R.id.email_and_name_container;
      LinearLayout emailAndNameContainer = ViewBindings.findChildViewById(rootView, id);
      if (emailAndNameContainer == null) {
        break missingId;
      }

      id = R.id.home_settings_textview;
      TextView homeSettingsTextview = ViewBindings.findChildViewById(rootView, id);
      if (homeSettingsTextview == null) {
        break missingId;
      }

      id = R.id.permissions_textview;
      TextView permissionsTextview = ViewBindings.findChildViewById(rootView, id);
      if (permissionsTextview == null) {
        break missingId;
      }

      id = R.id.settings_toolbar;
      Toolbar settingsToolbar = ViewBindings.findChildViewById(rootView, id);
      if (settingsToolbar == null) {
        break missingId;
      }

      id = R.id.user_settings_textview;
      TextView userSettingsTextview = ViewBindings.findChildViewById(rootView, id);
      if (userSettingsTextview == null) {
        break missingId;
      }

      id = R.id.voice_textview;
      TextView voiceTextview = ViewBindings.findChildViewById(rootView, id);
      if (voiceTextview == null) {
        break missingId;
      }

      return new FragmentSettBinding((ConstraintLayout) rootView, belowAccounts,
          belowAppPermissions, belowClients, belowFirstTextview, belowHomeSettings, belowVoice,
          divider8, divider9, emailAndNameContainer, homeSettingsTextview, permissionsTextview,
          settingsToolbar, userSettingsTextview, voiceTextview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
