// Generated by view binder compiler. Do not edit!
package com.example.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.example.demo.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityThingSelectionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Toolbar selectThingToolbar;

  @NonNull
  public final ImageView sortIcon;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final ImageView thingSelectionBackButton;

  @NonNull
  public final ViewPager2 viewPager;

  private ActivityThingSelectionBinding(@NonNull LinearLayout rootView,
      @NonNull Toolbar selectThingToolbar, @NonNull ImageView sortIcon,
      @NonNull TabLayout tabLayout, @NonNull ImageView thingSelectionBackButton,
      @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.selectThingToolbar = selectThingToolbar;
    this.sortIcon = sortIcon;
    this.tabLayout = tabLayout;
    this.thingSelectionBackButton = thingSelectionBackButton;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityThingSelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityThingSelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_thing_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityThingSelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.select_thing_toolbar;
      Toolbar selectThingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (selectThingToolbar == null) {
        break missingId;
      }

      id = R.id.sort_icon;
      ImageView sortIcon = ViewBindings.findChildViewById(rootView, id);
      if (sortIcon == null) {
        break missingId;
      }

      id = R.id.tab_layout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.thing_selection_back_button;
      ImageView thingSelectionBackButton = ViewBindings.findChildViewById(rootView, id);
      if (thingSelectionBackButton == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager2 viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivityThingSelectionBinding((LinearLayout) rootView, selectThingToolbar,
          sortIcon, tabLayout, thingSelectionBackButton, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
